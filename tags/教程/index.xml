<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>教程 on 乾坤袋</title><link>http://willerhe.github.io/tags/%E6%95%99%E7%A8%8B/</link><description>Recent content in 教程 on 乾坤袋</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sat, 29 May 2021 13:31:54 +0800</lastBuildDate><atom:link href="http://willerhe.github.io/tags/%E6%95%99%E7%A8%8B/index.xml" rel="self" type="application/rss+xml"/><item><title>十分钟使用Github Actions自动发布Hugo网站</title><link>http://willerhe.github.io/posts/tutorial/use-github-actions/</link><pubDate>Sat, 29 May 2021 13:31:54 +0800</pubDate><guid>http://willerhe.github.io/posts/tutorial/use-github-actions/</guid><description>介绍 Github Actions是GitHub 于 2018 年 10 月推出的一个 CI\CD 服务。CI\CD 其实说的是三件事情：「持续集成（Continuous Integration）」、「持续交付（Continuous Delivery）」、「持续部署（Continuous Deployment）」。 有了 GitHub Action 以后， GitHub 除了能够存储代码，能做的事情就更多了，比如我在 master 分支上提交了一段代码， GitHub Action 可以自动的帮我部署到我自己的服务器上去，或者它还可以帮我把代码打成镜像，将镜像自动提交到镜像仓库里。 虽然这些事情自己手动也能做，但是懒惰是程序员的第一生产力嘛。
环境要求 安装git 拥有一个github账号 了解Github Pages托管静态网站方式 Check&amp;gt;&amp;gt;&amp;gt; TODO：自动同步到Gitee镜像 步骤 了解github actions的工作流程、了解docker镜像基本使用方式。 找到需要自动构建的Hugo静态网站，并确保在本地能够构建成功。 开始使用github actions 服务，github actions会寻找项目根目录下.github/workflows/*下面所有的文件作为工作流描述文件，了解详情&amp;gt;&amp;gt;&amp;gt;。 这里我们不需要自己编写，直接使用第三方镜像，在github的应用市场 中查找适合自己Hugo项目的actions镜像，这里用的是hugo-setup。 把示例项目中.github/workflows/下面的配置文件拷贝到自己的项目中，如果同样使用的是hugo-setup，注意 publish_dir: ./public配置在v3.8.0版本是不起作用的，直接默认就好，不用改。 如果报项目仓库的访问权限错误，去给自己的项目加上访问秘钥，&amp;gt;&amp;gt;&amp;gt;。 修改代码推送到main分支，在github actions栏目中能够看到构建过程。构建成功后，修改git pages设置，把网站指向镜像自动部署的分支，要保证github pages能够找到index.html文件。 &amp;mdash;&amp;mdash; 待完善</description></item><item><title>十分钟使用Github Pages和Hugo搭建个人网站</title><link>http://willerhe.github.io/posts/tutorial/use-github-pages/</link><pubDate>Sat, 29 May 2021 13:31:54 +0800</pubDate><guid>http://willerhe.github.io/posts/tutorial/use-github-pages/</guid><description>介绍 Github Pages是Github官方的静态站点托管系统，能够依赖Git的代码管理能力和Github的仓库轻松维护个人网站。
Hugo是Go编写的静态网站生成器，速度快，易用，可配置。 使用Github Pages + Hugo构建个人网站的优点：
无须额外服务器，无须额外服务器，专注创作 支持Markdown 支持查看文件的历史改动 Hugo拥有海量皮肤，能够自定义 环境要求 安装git 安装golang、hugo 拥有一个github账号 步骤 为站点创建仓库，仓库名称必须为&amp;lt;user&amp;gt;.github.io或者&amp;lt;organization&amp;gt;.github.io，必须为Public仓库，必须有README.md文件，必须有index.html作为网站入口。More&amp;gt;&amp;gt;&amp;gt; 访问网站https://&amp;lt;user&amp;gt;.github.io或者&amp;lt;https://&amp;lt;organization&amp;gt;.github.io。看到index.html中的内容说明成功。 了解静态网站生成器，github官方是Jekyll，因为之前用过Hugo，体验非常好，所以改用Hugo。还有更多类似的 类似工具， 但是最终目的是相同的，要把我们的文档内容转为静态网页文件，关于Hugo的安装和使用查看见详情。 一切顺利的话，一个好看的网站就诞生了。 &amp;mdash;&amp;mdash; 待完善</description></item></channel></rss>